{block}

<p>The sequence sub-system of PAD, many many ways to get a sequence of numbers.</p>

{/block}

<hr>

<h3>Concepts</h2>

{block}

<p>There are 6 Sequence concepts

<table border=1>
<tr><td>sequences</td><td>Something that defines a sequence list</td></tr>
<tr><td>options</td><td>Options control aspects of a sequence list</td></tr>
<tr><td>store</td><td>A stored sequence list</td></tr>
<tr><td>operations</td><td>A sequence executed on a sequenceence list entry</td></tr>
<tr><td>actions</td><td>An operation executed on a sequence list</td></tr>
<tr><td>one</td><td>An action that reducces a sequence list to a single value</td></tr>
</table>

{/block}

<h3>Sequence</h2>

{block}

A sequence defines a list of items that are together a sequence list.<br>
in below 3 examples range/even/prime are sequences.

{table}
{demo}{sequence range='20..30'} {$range} {/sequence}{/demo}
{demo}{sequence even, rows=10}  {$even}  {/sequence}{/demo}
{demo}{sequence prime, rows=10} {$prime} {/sequence}{/demo}
{/table}

{/block}

<h3>Options</h2>

{block}

Options control aspects of a sequence list, <br>
in below 2 examples from/to/rows/random/max are options.

{table}
{demo}{sequence even, from=20, to=30 }
  {$sequence} 
{/sequence}{/demo}
{demo}{sequence power=2, rows=3, random, from=8, to=16 }
  {$sequence} 
{/sequence}{/demo}
{/table}

{/block}

<h3>Stores</h2>

{block}

Stores are stored sequence lists in from below example, mySeq is a store.

{table}
{demo}{sequence range='20..30', store='mySeq'} {/demo}
{demo}{mySeq} 
  {$mySeq} 
{/mySeq}{/demo}
{/table}

{/block}

<h3>Operations</h2>

{block}

Operations are a sequence that is executed on a sequence list entry when building the list<br>
in below 2 examples even/add are operations.

{table}
{demo}{sequence range='20..30', store='mySeq'} {/demo}
{demo}{mySeq even} 
  {$mySeq} 
{/mySeq}{/demo}
{demo}{mySeq add=5} 
  {$mySeq} 
{/mySeq}{/demo}
{/table}

{/block}

<h3>Actions</h2>

{block}

Actions operate on a sequence list after the list is build,<br>
in below 2 examples shuffle/reverse are actions.

{table}
{demo}{sequence range='20..30', store='mySeq'} {/demo}
{demo}{mySeq shuffle} 
  {$mySeq} 
{/mySeq}{/demo}
{demo}{mySeq reverse} 
  {$mySeq} 
{/mySeq}{/demo}
{/table}

{/block}

<h3>Ones</h2>

{block}

Executing a 'one' on a sequence list will reduce the sequence list to a single value,<br>
in from below 2 examples, first/sum are ones.

{table}
{demo}{sequence range='20..30', store='mySeq'} {/demo}
{demo}{mySeq first} 
  {$mySeq} 
{/mySeq}{/demo}
{demo}{mySeq sum} 
  {$mySeq} 
{/mySeq}{/demo}
{/table}

{/block}
